buildscript {
    ext {
        springBootVersion = '3.2.4'
        springCloudVersion = '2023.0.0'
        springCloudAlibabaVersion = '2023.0.0.0-RC1'
        mapstructVersion = '1.4.2.Final'
        lombokMapstructBindingVersion = '0.2.0'
        lombokVersion = '1.18.22'
        hutoolVersion = '6.0.0-M11'
        guavaVersion = '30.1.1-jre'
        okhttpVersion = '4.12.0'
        hibernateValidatorVersion = '6.2.0.Final'
        mybatisplusVersion = '3.5.5'
        mybatisplusGeneratorVersion = '3.5.3'
        dynamicDatasourceVersion = '4.3.0'
        p6spyVersion = '3.9.1'
        mysqlVersion = '8.0.26'
        xxlJobVersion = '2.4.0'
        javaxServletVersion = '4.0.1'
        caffeineVersion = '2.9.2'
        redissionVersion = '3.16.1'
        commonLang3Version = '3.12.0'
        commonPool2Version = '2.10.0'
        easyexcelVersion = '3.1.1'
        seataVersion = '1.4.2'
        transmittableVersion = '2.12.2'
        velocityEngineVersion = '2.3'
        redissonVersion = '3.17.6'
        validationVersion = '3.0.2'
        validatorVersion = '8.0.0.Final'
        springAuthorizationServerVersion = '1.2.3'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        //用来打包
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
//    apply plugin: 'io.spring.dependency-management'

    group 'com.zzz.framework'
    version '1.0-SNAPSHOT'

    sourceCompatibility = 17
    targetCompatibility = 17

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        implementation("org.projectlombok:lombok:${lombokVersion}")
        annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
        compileOnly("jakarta.servlet:jakarta.servlet-api:6.0.0")
        compileOnly("org.mapstruct:mapstruct:${mapstructVersion}")
        compileOnly("org.mapstruct:mapstruct-processor:${mapstructVersion}")
    }

    configurations {
        all*.exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    }

    /**
     * 发布jar包
     */
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                //配置上传源码
//                artifact sourceJar {
//                    classifier "sources"
//                }
            }
        }
    }
}

subprojects {
    dependencies {
        implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
        implementation platform("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")
        implementation platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}")
        implementation platform("com.squareup.okhttp3:okhttp-bom:${okhttpVersion}")


        implementation("org.springframework.boot:spring-boot-starter-actuator") {
            exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
        }

        annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}", "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
    }
}
